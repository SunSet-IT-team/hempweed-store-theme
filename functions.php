<?php
foreach (glob(get_template_directory() . '/inc/*.php') as $file) {
    require_once $file;
}
/**
 * kipr functions and definitions
 *
 * @link https://developer.wordpress.org/themes/basics/theme-functions/
 *
 * @package kipr
 */

if (!defined('_S_VERSION')) {
    define('_S_VERSION', '1.0.0');
}

// –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –ø–∞–º—è—Ç–∏
define('WP_MEMORY_LIMIT', '512M');
ini_set('memory_limit', '512M');

/**
 * Sets up theme defaults and registers support for various WordPress features.
 */
function kipr_setup() {
    load_theme_textdomain('kipr', get_template_directory() . '/languages');
    add_theme_support('automatic-feed-links');
    add_theme_support('title-tag');
    add_theme_support('post-thumbnails');
    
    register_nav_menus(array(
        'menu-1' => esc_html__('Primary', 'kipr'),
    ));
    
    add_theme_support('html5', array(
        'search-form',
        'comment-form',
        'comment-list',
        'gallery',
        'caption',
        'style',
        'script',
    ));
    
    add_theme_support('custom-background', apply_filters('kipr_custom_background_args', array(
        'default-color' => 'ffffff',
        'default-image' => '',
    )));
    
    add_theme_support('customize-selective-refresh-widgets');
    
    add_theme_support('custom-logo', array(
        'height' => 250,
        'width' => 250,
        'flex-width' => true,
        'flex-height' => true,
    ));
}
/**
 * üéØ –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –û–ü–õ–ê–¢–´ –ò –†–ï–î–ò–†–ï–ö–¢–ê
 */

// 1. –í–ö–õ–Æ–ß–ê–ï–ú –í–°–ï –ú–ï–¢–û–î–´ –û–ü–õ–ê–¢–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò
add_filter('woocommerce_available_payment_gateways', 'enable_all_payment_methods');
function enable_all_payment_methods($available_gateways) {
    if (is_checkout()) {
        // –í–∫–ª—é—á–∞–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        $all_gateways = WC()->payment_gateways->payment_gateways();
        
        foreach ($all_gateways as $gateway) {
            if ($gateway->id !== 'test_payment') { // –ù–µ –≤–∫–ª—é—á–∞–µ–º –Ω–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π –º–µ—Ç–æ–¥ –ø–æ–∫–∞
                $available_gateways[$gateway->id] = $gateway;
            }
        }
        
        // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π
        if (empty($available_gateways)) {
            include_once __DIR__ . '/includes/class-wc-test-payment-gateway.php';
            $available_gateways['test_payment'] = new WC_Test_Payment_Gateway();
        }
    }
    
    return $available_gateways;
}

// 2. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –í–´–ë–ò–†–ê–ï–ú –ü–ï–†–í–´–ô –î–û–°–¢–£–ü–ù–´–ô –ú–ï–¢–û–î –û–ü–õ–ê–¢–´
add_action('wp_footer', 'auto_select_payment_method');
function auto_select_payment_method() {
    if (is_checkout() && !is_wc_endpoint_url('order-received')) {
        ?>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ç–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã
            setTimeout(function() {
                // –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π
                if ($('input[name="payment_method"]:checked').length === 0) {
                    var firstMethod = $('input[name="payment_method"]').first();
                    if (firstMethod.length) {
                        firstMethod.prop('checked', true).trigger('change');
                        console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:', firstMethod.val());
                    }
                }
                
                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ–º —É—Å–ª–æ–≤–∏—è
                if ($('#terms').length && !$('#terms').is(':checked')) {
                    $('#terms').prop('checked', true);
                    console.log('‚úÖ –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–Ω—è—Ç—ã');
                }
                
                // –î–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω–æ–π
                $('#place_order').css({
                    'background': 'linear-gradient(135deg, #4CAF50 0%, #45a049 100%)',
                    'color': 'white',
                    'border': 'none',
                    'padding': '20px 40px',
                    'font-size': '20px',
                    'font-weight': 'bold',
                    'border-radius': '10px',
                    'cursor': 'pointer',
                    'margin-top': '20px'
                });
                
            }, 1000);
        });
        </script>
        <?php
    }
}

// 3. –ü–†–û–°–¢–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–ö–ê–ó–ê –î–õ–Ø –õ–Æ–ë–û–ì–û –ú–ï–¢–û–î–ê –û–ü–õ–ê–¢–´
add_action('woocommerce_checkout_process', 'simple_order_processing');
function simple_order_processing() {
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã
}

// 4. –ì–ê–†–ê–ù–¢–ò–†–û–í–ê–ù–ù–´–ô –†–ï–î–ò–†–ï–ö–¢ –ü–û–°–õ–ï –£–°–ü–ï–®–ù–û–ì–û –ó–ê–ö–ê–ó–ê
add_action('template_redirect', 'guaranteed_checkout_redirect');
function guaranteed_checkout_redirect() {
    if (is_checkout() && !is_wc_endpoint_url('order-received')) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∑–∞–∫–∞–∑ –≤ —Å–µ—Å—Å–∏–∏
        if (isset(WC()->session)) {
            $order_id = WC()->session->get('order_awaiting_payment');
            
            if ($order_id) {
                $order = wc_get_order($order_id);
                
                // –ï—Å–ª–∏ –∑–∞–∫–∞–∑ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è - —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º
                if ($order && !$order->has_status('failed')) {
                    $redirect_url = wc_get_endpoint_url('order-received', $order_id, wc_get_checkout_url());
                    $redirect_url = add_query_arg('key', $order->get_order_key(), $redirect_url);
                    
                    wp_redirect($redirect_url);
                    exit;
                }
            }
        }
    }
}

// 5. –°–û–ó–î–ê–ï–ú –ó–ê–ö–ê–ó –ß–ï–†–ï–ó AJAX –ï–°–õ–ò –°–¢–ê–ù–î–ê–†–¢–ù–´–ô –°–ü–û–°–û–ë –ù–ï –†–ê–ë–û–¢–ê–ï–¢
add_action('wp_ajax_nopriv_create_quick_order', 'create_quick_order');
add_action('wp_ajax_create_quick_order', 'create_quick_order');
function create_quick_order() {
    if (!class_exists('WooCommerce')) {
        wp_send_json_error('WooCommerce –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
    }
    
    try {
        // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
        $order = wc_create_order();
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        foreach (WC()->cart->get_cart() as $cart_item_key => $cart_item) {
            $product = wc_get_product($cart_item['product_id']);
            $order->add_product($product, $cart_item['quantity']);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
        $order->set_address(array(
            'first_name' => sanitize_text_field($_POST['billing_first_name'] ?? 'Customer'),
            'last_name'  => sanitize_text_field($_POST['billing_last_name'] ?? ''),
            'email'      => sanitize_email($_POST['billing_email'] ?? 'customer@example.com'),
            'phone'      => sanitize_text_field($_POST['billing_phone'] ?? ''),
            'address_1'  => sanitize_text_field($_POST['billing_address_1'] ?? ''),
            'city'       => sanitize_text_field($_POST['billing_city'] ?? ''),
            'country'    => sanitize_text_field($_POST['billing_country'] ?? 'RU')
        ), 'billing');
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã –∏–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π
        $payment_method = sanitize_text_field($_POST['payment_method'] ?? 'bacs');
        $order->set_payment_method($payment_method);
        $order->set_payment_method_title($payment_method);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏
        $order->calculate_totals();
        $order->save();
        
        // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        WC()->cart->empty_cart();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ —Å–µ—Å—Å–∏—é
        WC()->session->set('order_awaiting_payment', $order->get_id());
        
        wp_send_json_success(array(
            'order_id' => $order->get_id(),
            'order_key' => $order->get_order_key(),
            'redirect_url' => wc_get_endpoint_url('order-received', $order->get_id(), wc_get_checkout_url()) . '?key=' . $order->get_order_key()
        ));
        
    } catch (Exception $e) {
        wp_send_json_error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: ' . $e->getMessage());
    }
}

// 7. –†–ï–ó–ï–†–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê "–°–ü–ê–°–ò–ë–û"
add_action('wp', 'fallback_thankyou_page');
function fallback_thankyou_page() {
    if (is_wc_endpoint_url('order-received')) {
        $order_id = get_query_var('order-received');
        $order_key = isset($_GET['key']) ? sanitize_text_field($_GET['key']) : '';
        
        if ($order_id) {
            $order = wc_get_order($order_id);
            
            // –ï—Å–ª–∏ –∑–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∫–ª—é—á –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if (!$order || ($order_key && $order->get_order_key() !== $order_key)) {
                // –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
                echo '<!DOCTYPE html><html><head><title>–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!</title><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">';
                echo '<style>body{font-family:Arial,sans-serif;text-align:center;padding:50px;background:#f8f9fa;}';
                echo '.thank-you{background:white;padding:40px;border-radius:10px;box-shadow:0 5px 15px rgba(0,0,0,0.1);}';
                echo '</style></head><body>';
                echo '<div class="thank-you"><h1>üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!</h1>';
                echo '<p>–í–∞—à –∑–∞–∫–∞–∑ #' . esc_html($order_id) . ' —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω.</p>';
                echo '<p>–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.</p>';
                echo '<a href="' . esc_url(home_url('/')) . '" style="display:inline-block;padding:10px 20px;background:#007cba;color:white;text-decoration:none;border-radius:5px;">–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω</a>';
                echo '</div></body></html>';
                exit;
            }
        }
    }
}

// 8. –û–ë–ï–°–ü–ï–ß–ò–í–ê–ï–ú –†–ê–ë–û–¢–£ –°–ï–°–°–ò–ò WOOCOMMERCE
add_action('wp_loaded', 'ensure_wc_session');
function ensure_wc_session() {
    if (class_exists('WooCommerce') && !is_admin() && !defined('DOING_CRON')) {
        if (!WC()->session) {
            include_once WC_ABSPATH . 'includes/class-wc-session-handler.php';
            WC()->session = new WC_Session_Handler();
            WC()->session->init();
        }
        
        // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞
        if (!WC()->session->has_session()) {
            WC()->session->set_customer_session_cookie(true);
        }
    }
}

// 9. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ê–ö–¢–ò–í–ê–¶–ò–Ø –ú–ï–¢–û–î–û–í –û–ü–õ–ê–¢–´
add_action('init', 'auto_enable_payment_methods');
function auto_enable_payment_methods() {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    $methods_to_enable = array('bacs', 'cheque', 'cod');
    
    foreach ($methods_to_enable as $method_id) {
        $option_name = 'woocommerce_' . $method_id . '_settings';
        $settings = get_option($option_name, array());
        
        if (empty($settings) || !isset($settings['enabled']) || $settings['enabled'] !== 'yes') {
            $settings['enabled'] = 'yes';
            update_option($option_name, $settings);
        }
    }
}
/**
 * Set the content width in pixels
 */
function kipr_content_width() {
    $GLOBALS['content_width'] = apply_filters('kipr_content_width', 640);
}
add_action('after_setup_theme', 'kipr_content_width', 0);

/**
 * Register widget area.
 */
function kipr_widgets_init() {
    register_sidebar(array(
        'name' => esc_html__('Sidebar', 'kipr'),
        'id' => 'sidebar-1',
        'description' => esc_html__('Add widgets here.', 'kipr'),
        'before_widget' => '<section id="%1$s" class="widget %2$s">',
        'after_widget' => '</section>',
        'before_title' => '<h2 class="widget-title">',
        'after_title' => '</h2>'
    ));
}
add_action('widgets_init', 'kipr_widgets_init');

/**
 * Enqueue scripts and styles.
 */
function kipr_scripts() {
    wp_enqueue_style('kipr-style', get_stylesheet_uri(), array(), _S_VERSION);
    wp_style_add_data('kipr-style', 'rtl', 'replace');
    wp_enqueue_script('kipr-navigation', get_template_directory_uri() . '/js/navigation.js', array(), _S_VERSION, true);
    
    if (is_singular() && comments_open() && get_option('thread_comments')) {
        wp_enqueue_script('comment-reply');
    }
    
    // WooCommerce scripts
    if (class_exists('WooCommerce')) {
        wp_enqueue_script('wc-cart-fragments');
        wp_enqueue_script('wc-add-to-cart');
    }
}
add_action('wp_enqueue_scripts', 'kipr_scripts');

/**
 * –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
 */
add_filter('loop_shop_per_page', 'custom_products_per_page', 20);
function custom_products_per_page($cols) {
    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 48, 96 –∏–ª–∏ 200)
    return 48;
}

/**
 * –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤
 */
function custom_woocommerce_pagination() {
    if (woocommerce_products_will_display()) {
        woocommerce_pagination();
    }
}
add_action('woocommerce_after_shop_loop', 'custom_woocommerce_pagination');

/**
 * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ WooCommerce –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
 */
add_action('pre_get_posts', 'optimize_product_queries');
function optimize_product_queries($query) {
    if (!is_admin() && $query->is_main_query() && (is_product_category() || is_shop())) {
        // –£–º–µ–Ω—å—à–∞–µ–º –Ω–∞–≥—Ä—É–∑–∫—É –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        $query->set('posts_per_page', 48);
        $query->set('no_found_rows', false); // –í–∫–ª—é—á–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    }
}
// 6. JavaScript –î–õ–Ø –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û–ì–û –û–§–û–†–ú–õ–ï–ù–ò–Ø –ó–ê–ö–ê–ó–ê (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô)
add_action('wp_footer', 'add_alternative_checkout_script');
function add_alternative_checkout_script() {
    if (is_checkout() && !is_wc_endpoint_url('order-received')) {
        ?>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
            $('form.woocommerce-checkout').on('submit', function(e) {
                e.preventDefault();
                
                console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–∫–∞–∑–∞...');
                
                // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
                $('#place_order').prop('disabled', true).val('–û–±—Ä–∞–±–æ—Ç–∫–∞...');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –ª–æ–∞–¥–µ—Ä
                $('body').append('\
                    <div id="checkout-loading" style="\
                        position: fixed; top: 0; left: 0; width: 100%; height: 100%; \
                        background: rgba(255,255,255,0.95); z-index: 9999; \
                        display: flex; justify-content: center; align-items: center; \
                        flex-direction: column; font-family: Arial, sans-serif;\
                    ">\
                        <div style="text-align: center; padding: 40px; background: white; \
                                  border-radius: 15px; box-shadow: 0 10px 40px rgba(0,0,0,0.2);">\
                            <div style="color: #4CAF50; font-size: 60px; margin-bottom: 20px;">‚è≥</div>\
                            <h2 style="color: #333; margin-bottom: 20px;">–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –∑–∞–∫–∞–∑</h2>\
                            <p style="color: #666;">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...</p>\
                            <div style="margin: 30px 0;">\
                                <div style="width: 50px; height: 50px; border: 4px solid #f3f3f3; \
                                          border-top: 4px solid #4CAF50; border-radius: 50%; \
                                          animation: spin 1s linear infinite; margin: 0 auto;"></div>\
                            </div>\
                        </div>\
                    </div>\
                    <style>\
                        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }\
                        body { overflow: hidden !important; }\
                    </style>\
                ');
                
                // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
                var formData = $(this).serializeArray();
                var checkoutData = {};
                
                $.each(formData, function() {
                    checkoutData[this.name] = this.value;
                });
                
                // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã
                checkoutData.payment_method = $('input[name="payment_method"]:checked').val();
                
                // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ AJAX
                $.ajax({
                    url: '<?php echo admin_url('admin-ajax.php'); ?>',
                    type: 'POST',
                    data: {
                        action: 'create_quick_order',
                        ...checkoutData
                    },
                    success: function(response) {
                        if (response.success) {
                            console.log('‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
                            console.log('–†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞:', response.data.redirect_url);
                            
                            // –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
                            $('#checkout-loading').html('\
                                <div style="text-align: center; padding: 40px; background: white; \
                                          border-radius: 15px; box-shadow: 0 10px 40px rgba(0,0,0,0.2);">\
                                    <div style="color: #4CAF50; font-size: 60px; margin-bottom: 20px;">‚úÖ</div>\
                                    <h2 style="color: #333; margin-bottom: 20px;">–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</h2>\
                                    <p style="color: #666;">–°–ø–∞—Å–∏–±–æ –∑–∞ –ü–æ–∫—É–ø–∫—É</p>\
                                </div>\
                            ');
                            
                            // –†–µ–¥–∏—Ä–µ–∫—Ç —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                            setTimeout(function() {
                              window.location.href = '<?php echo home_url(); ?>';
                            }, 2000);
                            
                        } else {
                            console.error('‚ùå –û—à–∏–±–∫–∞:', response.data);
                            
                            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∫—Ä–∞—Å–∏–≤–æ
                            $('#checkout-loading').html('\
                                <div style="text-align: center; padding: 40px; background: white; \
                                          border-radius: 15px; box-shadow: 0 10px 40px rgba(0,0,0,0.2);">\
                                    <div style="color: #ff4444; font-size: 60px; margin-bottom: 20px;">‚ùå</div>\
                                    <h2 style="color: #333; margin-bottom: 20px;">–û—à–∏–±–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</h2>\
                                    <p style="color: #666; margin-bottom: 20px;">' + response.data + '</p>\
                                    <button onclick="location.reload()" style="\
                                        padding: 10px 20px; background: #007cba; color: white; \
                                        border: none; border-radius: 5px; cursor: pointer;\
                                    ">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>\
                                </div>\
                            ');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error);
                        
                        $('#checkout-loading').html('\
                            <div style="text-align: center; padding: 40px; background: white; \
                                      border-radius: 15px; box-shadow: 0 10px 40px rgba(0,0,0,0.2);">\
                                <div style="color: #ff4444; font-size: 60px; margin-bottom: 20px;">‚ö†Ô∏è</div>\
                                <h2 style="color: #333; margin-bottom: 20px;">–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è</h2>\
                                <p style="color: #666; margin-bottom: 20px;">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞</p>\
                                <button onclick="location.reload()" style="\
                                    padding: 10px 20px; background: #007cba; color: white; \
                                    border: none; border-radius: 5px; cursor: pointer;\
                                ">–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>\
                            </div>\
                        ');
                    }
                });
            });
        });
        </script>
        <?php
    }
}

/**
 * Include additional files
 */



if (defined('JETPACK__VERSION')) {
    require get_template_directory() . '/inc/jetpack.php';
}

/**
 * Custom WooCommerce templates
 */
function custom_woocommerce_category_template($template) {
    if (is_tax('product_cat')) {
        $custom_template = get_template_directory() . '/woocommerce/taxonomy-product_cat.php';
        if (file_exists($custom_template)) {
            return $custom_template;
        }
    }
    return $template;
}
add_filter('template_include', 'custom_woocommerce_category_template', 100);

function custom_woocommerce_template($template) {
    if (is_singular('product')) {
        $custom_template = get_stylesheet_directory() . '/woocommerce/custom-product-template.php';
        if (file_exists($custom_template)) {
            return $custom_template;
        }
    }
    return $template;
}
add_filter('template_include', 'custom_woocommerce_template');

/**
 * –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∫–æ—Ä–∑–∏–Ω—ã WooCommerce
 */
add_action('wp_enqueue_scripts', 'disable_woocommerce_cart_js', 999);
function disable_woocommerce_cart_js() {
    if (is_cart()) {
        wp_dequeue_script('wc-cart');
        wp_deregister_script('wc-cart');
    }
}

/**
 * Cart count update functionality
 */
function update_cart_count_script() {
    if (class_exists('WooCommerce')) {
        wp_enqueue_script('cart-update', get_template_directory_uri() . '/js/cart-update.js', array('jquery'), null, true);
        wp_localize_script('cart-update', 'cart_data', array(
            'ajax_url' => admin_url('admin-ajax.php')
        ));
    }
}
add_action('wp_enqueue_scripts', 'update_cart_count_script');

function update_cart_count() {
    if (class_exists('WooCommerce')) {
        echo WC()->cart->get_cart_contents_count();
    }
    wp_die();
}
add_action('wp_ajax_update_cart_count', 'update_cart_count');
add_action('wp_ajax_nopriv_update_cart_count', 'update_cart_count');

/**
 * Disable WooCommerce redirects and notices
 */
add_filter('woocommerce_add_to_cart_redirect', '__return_false');
add_filter('wc_add_to_cart_message_html', '__return_empty_string');

add_action('template_redirect', 'remove_all_woocommerce_notices');
function remove_all_woocommerce_notices() {
    if (class_exists('WooCommerce') && (is_product() || is_cart())) {
        remove_action('woocommerce_before_main_content', 'woocommerce_output_content_wrapper', 10);
        remove_action('woocommerce_before_single_product', 'wc_print_notices', 10);
        remove_action('woocommerce_shortcode_before_product_cat_loop', 'wc_print_notices', 10);
        remove_action('woocommerce_before_shop_loop', 'wc_print_notices', 10);
    }
}

/**
 * Product availability check
 */
add_action('wp_ajax_check_product_availability', 'check_product_availability');
add_action('wp_ajax_nopriv_check_product_availability', 'check_product_availability');
function check_product_availability() {
    if (!class_exists('WooCommerce')) {
        wp_send_json_error(array('message' => __('WooCommerce is not activated', 'kipr')));
    }
    
    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;
    
    $product = wc_get_product($product_id);
    
    if (!$product) {
        wp_send_json_error(array('message' => __('Product not found', 'kipr')));
    }
    
    $stock_quantity = $product->get_stock_quantity();
    $product_name = $product->get_name();
    
    if (!$product->is_in_stock()) {
        wp_send_json_error(array('message' => __('Product is out of stock', 'kipr')));
    } elseif ($stock_quantity > 0 && $quantity > $stock_quantity) {
        $message = sprintf(_n('Only %d item "%s" in stock', 'Only %d items "%s" in stock', $stock_quantity, 'kipr'), $stock_quantity, $product_name);
        wp_send_json_error(array('message' => $message));
    } else {
        wp_send_json_success();
    }
}

/**
 * Custom add to cart notices
 */
add_action('wp_footer', 'custom_add_to_cart_notices');
function custom_add_to_cart_notices() {
    if (!class_exists('WooCommerce') || !(is_product() || is_shop() || is_product_category())) {
        return;
    }
    ?>
    <script type="text/javascript">
    jQuery(document).ready(function($) {
        function showCustomNotice(message, type) {
            $('.custom-woocommerce-notice').remove();
            
            var notice = $('<div class="custom-woocommerce-notice">' + message + '</div>');
            notice.addClass(type === 'error' ? 'custom-notice-error' : 'custom-notice-success');
            
            $('body').append(notice);
            
            setTimeout(function() {
                notice.fadeOut(300, function() {
                    $(this).remove();
                });
            }, 5000);
            
            notice.on('click', function() {
                $(this).remove();
            });
        }

        function syncQuantity() {
            $('.cat__input').each(function() {
                var input = $(this);
                var quantity = input.val();
                var form = input.closest('.cat__form_cntr').find('form');
                
                form.find('input[name="quantity"]').val(quantity);
                form.find('.cat__add_btn').attr('data-quantity', quantity);
            });
        }

        syncQuantity();

        $(document).on('input change', '.cat__input', function() {
            syncQuantity();
        });

        $(document).on('click', '.cat__add_btn', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            var button = $(this);
            var form = button.closest('form');
            var product_id = button.attr('data-product_id');
            var product_name = button.attr('data-product_name');
            var quantity = button.attr('data-quantity') || form.find('input[name="quantity"]').val() || 1;
            
            if (!product_id) {
                showCustomNotice('Could not determine product', 'error');
                return false;
            }
            
            showCustomNotice('Adding ' + quantity + ' item(s) to cart...', 'success');
            
            $.ajax({
                type: 'POST',
                url: '<?php echo admin_url('admin-ajax.php'); ?>',
                data: {
                    action: 'check_product_availability',
                    product_id: product_id,
                    quantity: quantity
                },
                success: function(response) {
                    if (response.success) {
                        $.ajax({
                            type: 'POST',
                            url: '<?php echo admin_url('admin-ajax.php'); ?>',
                            data: {
                                action: 'woocommerce_add_to_cart',
                                product_id: product_id,
                                quantity: quantity
                            },
                            success: function(cartResponse) {
                                if (cartResponse.error) {
                                    showCustomNotice(cartResponse.error, 'error');
                                } else {
                                    var message = quantity + ' item(s) of "' + product_name + '" added to cart';
                                    showCustomNotice(message, 'success');
                                    $(document.body).trigger('wc_fragment_refresh');
                                }
                            },
                            error: function() {
                                showCustomNotice('Error adding product to cart', 'error');
                            }
                        });
                    } else {
                        showCustomNotice(response.data.message, 'error');
                    }
                },
                error: function() {
                    showCustomNotice('Error checking product availability', 'error');
                }
            });
            
            return false;
        });
    });
    </script>
    <style>
    .custom-woocommerce-notice {
        position: fixed;
        top: 100px;
        left: 50%;
        transform: translateX(-50%);
        padding: 15px 20px;
        border-radius: 5px;
        z-index: 99999;
        max-width: 90%;
        width: 400px;
        text-align: center;
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        font-weight: bold;
        font-size: 16px;
    }
    .custom-notice-success {
        background: #d4edda;
        border: 1px solid #c3e6cb;
        color: #155724;
    }
    .custom-notice-error {
        background: #f8d7da;
        border: 1px solid 'f5c6cb';
        color: '#721c24';
    }
    </style>
    <?php
}

/**
 * Additional product info functions
 */
add_action('wp_ajax_get_product_name', 'get_product_name');
add_action('wp_ajax_nopriv_get_product_name', 'get_product_name');
function get_product_name() {
    if (!class_exists('WooCommerce')) {
        wp_send_json_error();
    }
    
    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $product = wc_get_product($product_id);
    
    if ($product) {
        wp_send_json_success(array('product_name' => $product->get_name()));
    } else {
        wp_send_json_error();
    }
}

add_action('wp_ajax_get_product_id_by_slug', 'get_product_id_by_slug');
add_action('wp_ajax_nopriv_get_product_id_by_slug', 'get_product_id_by_slug');
function get_product_id_by_slug() {
    $product_slug = isset($_POST['product_slug']) ? sanitize_text_field($_POST['product_slug']) : '';
    $product = get_page_by_path($product_slug, OBJECT, 'product');
    
    if ($product) {
        wp_send_json_success(array('product_id' => $product->ID));
    } else {
        wp_send_json_error();
    }
}

/**
 * Ensure cart fragments are updated everywhere
 */
add_filter('woocommerce_add_to_cart_fragments', 'update_cart_fragments_everywhere');
function update_cart_fragments_everywhere($fragments) {
    if (class_exists('WooCommerce')) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã
        $fragments['.cart-count'] = '<span class="cart-count">' . WC()->cart->get_cart_contents_count() . '</span>';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É
        $fragments['.cart-total'] = '<span class="cart-total">' . WC()->cart->get_cart_total() . '</span>';
    }
    return $fragments;
}

/**
 * AJAX CART UPDATE HANDLER
 */
add_action('wp_ajax_update_cart_quantities', 'update_cart_quantities');
add_action('wp_ajax_nopriv_update_cart_quantities', 'update_cart_quantities');
function update_cart_quantities() {
    if (!class_exists('WooCommerce')) {
        wp_send_json_error('WooCommerce not active');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º nonce –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    if (!isset($_POST['quantities']) || !is_string($_POST['quantities'])) {
        wp_send_json_error('Invalid data');
    }
    
    $quantities = json_decode(stripslashes($_POST['quantities']), true);
    
    if (!is_array($quantities)) {
        wp_send_json_error('Invalid quantities data');
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    $old_quantities = array();
    foreach (WC()->cart->get_cart() as $cart_item_key => $cart_item) {
        $old_quantities[$cart_item_key] = $cart_item['quantity'];
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
    foreach ($quantities as $input_name => $quantity) {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º cart_item_key –∏–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—è
        if (preg_match('/cart\[(.*?)\]\[qty\]/', $input_name, $matches)) {
            $cart_item_key = $matches[1];
            $quantity = intval($quantity);
            
            if ($quantity > 0) {
                WC()->cart->set_quantity($cart_item_key, $quantity);
            } else {
                WC()->cart->remove_cart_item($cart_item_key);
            }
        }
    }
    
    WC()->cart->calculate_totals();
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã
    $cart_data = array(
        'cart_count' => WC()->cart->get_cart_contents_count(),
        'cart_total' => WC()->cart->get_cart_total(),
        'message' => 'Cart updated successfully'
    );
    
    // –¢–∞–∫–∂–µ –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ subtotal –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    foreach (WC()->cart->get_cart() as $cart_item_key => $cart_item) {
        $_product = $cart_item['data'];
        $cart_data['items'][$cart_item_key] = array(
            'subtotal' => WC()->cart->get_product_subtotal($_product, $cart_item['quantity']),
            'quantity' => $cart_item['quantity'],
            'old_quantity' => $old_quantities[$cart_item_key] ?? 0
        );
    }
    
    wp_send_json_success($cart_data);
}

/**
 * ADD SECURITY NONCE FOR AJAX REQUESTS
 */
add_action('wp_enqueue_scripts', 'add_ajax_nonce');
function add_ajax_nonce() {
    if (is_cart()) {
        wp_localize_script('jquery', 'cart_ajax', array(
            'nonce' => wp_create_nonce('update_cart_nonce')
        ));
    }
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
 */
add_action('woocommerce_after_checkout_validation', 'validate_phone_number', 10, 2);
function validate_phone_number($data, $errors) {
    if (isset($data['billing_phone']) && !empty($data['billing_phone'])) {
        $phone = $data['billing_phone'];
        
        // –û—á–∏—â–∞–µ–º –Ω–æ–º–µ—Ä –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        $clean_phone = preg_replace('/[^\d+]/', '', $phone);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É
        if (strlen($clean_phone) < 10) {
            $errors->add('validation', __('Phone number is too short', 'woocommerce'));
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä –∏ + –≤ –Ω–∞—á–∞–ª–µ
        if (!preg_match('/^\+?[0-9]{10,15}$/', $clean_phone)) {
            $errors->add('validation', __('Please enter a valid phone number', 'woocommerce'));
        }
    }
}

/**
 * –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –±–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫
 */
function add_simple_phone_validation() {
    if (is_checkout()) {
        ?>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            // –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤–≤–æ–¥–∞
            function validatePhoneInput(e) {
                var key = e.key;
                var value = this.value;
                
                // –†–∞–∑—Ä–µ—à–∞–µ–º: —Ü–∏—Ñ—Ä—ã, +, backspace, delete, tab, —Å—Ç—Ä–µ–ª–∫–∏
                var allowedKeys = [
                    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
                    '+',
                    'Backspace', 'Delete', 'Tab', 
                    'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'
                ];
                
                // –†–∞–∑—Ä–µ—à–∞–µ–º –ø–ª—é—Å —Ç–æ–ª—å–∫–æ –≤ –Ω–∞—á–∞–ª–µ
                if (key === '+' && value !== '' && !value.startsWith('+')) {
                    e.preventDefault();
                    return false;
                }
                
                // –ó–∞–ø—Ä–µ—â–∞–µ–º –≤—Å–µ, –∫—Ä–æ–º–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–ª–∞–≤–∏—à
                if (allowedKeys.indexOf(key) === -1) {
                    e.preventDefault();
                    return false;
                }
                
                return true;
            }

            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–æ–º–µ—Ä–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ
            function cleanPastedPhone(text) {
                // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ –ø–ª—é—Å—ã
                var cleaned = text.replace(/[^\d+]/g, '');
                
                // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø–ª—é—Å—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π
                if ((cleaned.match(/\+/g) || []).length > 1) {
                    var firstPlusIndex = cleaned.indexOf('+');
                    cleaned = '+' + cleaned.replace(/\+/g, '').substring(firstPlusIndex);
                }
                
                return cleaned;
            }

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ –ø–æ–ª—è
            function initPhoneField() {
                var phoneInput = document.getElementById('billing_phone');
                
                if (phoneInput && !phoneInput.classList.contains('phone-validation-applied')) {
                    phoneInput.classList.add('phone-validation-applied');
                    
                    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
                    phoneInput.addEventListener('keydown', function(e) {
                        validatePhoneInput.call(this, e);
                    });
                    
                    phoneInput.addEventListener('paste', function(e) {
                        e.preventDefault();
                        var pastedText = (e.clipboardData || window.clipboardData).getData('text');
                        var cleanedText = cleanPastedPhone(pastedText);
                        
                        // –í—Å—Ç–∞–≤–ª—è–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
                        document.execCommand('insertText', false, cleanedText);
                    });
                    
                    // –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
                    phoneInput.placeholder = 'Enter international phone number';
                }
            }

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
            setTimeout(initPhoneField, 500);
            
            // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ AJAX –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
            $(document).on('updated_checkout', function() {
                setTimeout(initPhoneField, 1000);
            });
        });
        </script>
        <?php
    }
}
add_action('wp_footer', 'add_simple_phone_validation');

/**
 * –í–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω –¥–ª—è WooCommerce (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
 */
add_filter('woocommerce_countries_allowed_countries', 'enable_all_countries');
function enable_all_countries($countries) {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    return $countries;
}

/**
 * –í–∫–ª—é—á–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–≤–º–µ—Å—Ç–æ –≤—Å–µ—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤)
 */
add_filter('default_checkout_billing_country', 'change_default_checkout_country');
add_filter('default_checkout_shipping_country', 'change_default_checkout_country');
function change_default_checkout_country() {
    return 'RU'; // –†–æ—Å—Å–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –Ω–æ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ª—é–±—É—é
}
/**
 * –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –£–í–ï–õ–ò–ß–ï–ù–ò–ï –¢–û–í–ê–†–û–í - –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
 */
add_filter('loop_shop_per_page', 'force_products_per_page', 9999);
function force_products_per_page($cols) {
    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (48, 100, 200)
    return 100;
}

// –û—Ç–∫–ª—é—á–∞–µ–º –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
add_action('pre_get_posts', 'force_products_query', 9999);
function force_products_query($query) {
    if (!is_admin() && $query->is_main_query()) {
        if (is_product_category() || is_shop() || is_product_tag()) {
            $query->set('posts_per_page', 100);
            $query->set('no_found_rows', false);
        }
    }
}

/**
 * –í–∫–ª—é—á–∞–µ–º lazy loading –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ (–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)
 */
add_filter('wp_get_attachment_image_attributes', 'add_lazy_loading_to_products', 10, 3);
function add_lazy_loading_to_products($attr, $attachment, $size) {
    if (is_shop() || is_product_category() || is_product_tag()) {
        $attr['loading'] = 'lazy';
        $attr['decoding'] = 'async';
    }
    return $attr;
}
?>